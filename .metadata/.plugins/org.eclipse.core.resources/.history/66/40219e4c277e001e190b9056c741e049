#include "button.h"


static int KeyReg0[NO_OF_BUTTONS];
static int KeyReg1[NO_OF_BUTTONS];
static int KeyReg2[NO_OF_BUTTONS];
static int KeyReg3[NO_OF_BUTTONS];
static GPIO_TypeDef* BUTTON_PORT[NO_OF_BUTTONS] = {BUTTON_1_PORT, BUTTON_2_PORT, BUTTON_3_PORT}
uint16_t GPIO_Pin
static int TimeOutForKeyPress[NO_OF_BUTTONS];
static int button_flag[NO_OF_BUTTONS];


void buttonInit(){
	for(int i = 0; i < NO_OF_BUTTONS; i++){
		KeyReg0[i] = NORMAL_STATE;
		KeyReg1[i] = NORMAL_STATE;
		KeyReg2[i] = NORMAL_STATE;
		KeyReg3[i] = NORMAL_STATE;

		TimeOutForKeyPress[i] =  500;
		button_flag[i] = 0;
	}
}

int isButton1Pressed(int index){
	if(index >= NO_OF_BUTTONS){
		return 0;
	}
	if(button_flag[index] == 1){
		button_flag[index] = 0;
		return 1;
	}
	return 0;
}

void subKeyProcess(int index){
	button_flag[index] = 1;
}

void getKeyInput(){
  KeyReg2 = KeyReg1;
  KeyReg1 = KeyReg0;
  //Add your button here
  KeyReg0 = HAL_GPIO_ReadPin(BUTTON_GPIO_Port, BUTTON_Pin);

  if ((KeyReg1 == KeyReg0) && (KeyReg1 == KeyReg2)){
    if (KeyReg2 != KeyReg3){
      KeyReg3 = KeyReg2;

      if (KeyReg3 == PRESSED_STATE){
        TimeOutForKeyPress = 500;
        subKeyProcess();
      }
    }else{
       TimeOutForKeyPress --;
        if (TimeOutForKeyPress == 0){
        	TimeOutForKeyPress = 500;
			subKeyProcess();
        }
    }
  }
}

