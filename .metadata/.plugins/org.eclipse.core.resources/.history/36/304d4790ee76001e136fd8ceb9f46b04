/*
 * fsm.c
 *
 *  Created on: Oct 26, 2023
 *      Author: Admin
 */
#include "fsm.h"
static uint8_t red_counter = 10;
static uint8_t green_counter = 8;

static int trafficstate = 0;

static int time_1 = 0;
static int time_2 = 0;

static uint8_t led7state = 0;

void resetLED(){
	HAL_GPIO_WritePin(GREEN_1_PORT, GREEN_1_PIN, RESET);
	HAL_GPIO_WritePin(GREEN_2_PORT, GREEN_2_PIN, RESET);
	HAL_GPIO_WritePin(YELLOW_1_PORT, YELLOW_1_PIN, RESET);
	HAL_GPIO_WritePin(YELLOW_2_PORT, YELLOW_2_PIN, RESET);
	HAL_GPIO_WritePin(RED_1_PORT, RED_1_PIN, RESET);
	HAL_GPIO_WritePin(RED_2_PORT, RED_2_PIN, RESET);
}

static int mode = 0;
static int configMode = 0;

void fsm_mode(void){
	switch (mode){
	case 0:
		mode_1();
		if(is_button_pressed(1) == BUTTON_IS_PRESSED){
			resetLED();
			configMode = 0;
			mode = 1;
		}
		break;
	case 1:
		mode_2(configMode);
		if(is_button_pressed(2) == BUTTON_IS_PRESSED && configMode == 0){
			resetLED();
			configMode = 1;
			mode = 1;
		}else if(is_button_pressed(2) == BUTTON_IS_PRESSED && configMode == 1){
			resetLED();
			time_1 = 0;
			time_2 = 0;
			configMode = 0;
			mode = 0;
		}
		break;
	}
	if(is_button_pressed(0) == BUTTON_IS_PRESSED){
		time_1 = 0;
		time_2 = 0;
		trafficstate = 0;
		resetLED();
		mode = 0;
	}
}


void mode_1(void){
	if(time_1 <= 0 || time_2 <= 0){
		switch (trafficstate){
			case 0:
				HAL_GPIO_WritePin(YELLOW_2_PORT, YELLOW_2_PIN, RESET);
				HAL_GPIO_WritePin(RED_1_PORT, RED_1_PIN, RESET);
				HAL_GPIO_WritePin(GREEN_1_PORT, GREEN_1_PIN, SET);
				HAL_GPIO_WritePin(RED_2_PORT, RED_2_PIN, SET);
				trafficstate = 1;
				time_1 = green_counter;
				time_2 = red_counter;
				break;
			case 1:
				HAL_GPIO_WritePin(GREEN_1_PORT, GREEN_1_PIN, RESET);
				HAL_GPIO_WritePin(YELLOW_1_PORT, YELLOW_1_PIN, SET);
				trafficstate = 2;
				time_1 = red_counter-green_counter;
				break;
			case 2:
				HAL_GPIO_WritePin(YELLOW_1_PORT, YELLOW_1_PIN, RESET);
				HAL_GPIO_WritePin(RED_1_PORT, RED_2_PIN, RESET);
				HAL_GPIO_WritePin(GREEN_2_PORT, GREEN_2_PIN, SET);
				HAL_GPIO_WritePin(RED_1_PORT, RED_1_PIN, SET);
				trafficstate = 3;
				time_1 = red_counter;
				time_2 = green_counter;
				break;
			case 3:
				HAL_GPIO_WritePin(GREEN_2_PORT, GREEN_2_PIN, RESET);
				HAL_GPIO_WritePin(YELLOW_2_PORT, YELLOW_2_PIN, SET);
				trafficstate = 0;
				time_2 = red_counter-green_counter;
				//setTrafficTimer(yellow_counter);
				break;
		}
	}
	if(getTimerFlag(0)){
		control7SEG(led7state, time_1, time_2);
		led7state++;
		if(led7state > 3){
			led7state = 0;
			time_1--;
			time_2--;
		}
		set7SEGTimer(250);
	}
}


void mode_2(){
	switch(configMode){
	case 0:
		if(getTimerFlag(1)){
			HAL_GPIO_TogglePin(RED_1_PORT, RED_1_PIN);
			HAL_GPIO_TogglePin(RED_2_PORT, RED_2_PIN);
			setLEDBlinkTimer(250);
		}
		if(getTimerFlag(0)){
			led7state++;
			if(led7state > 3){
				led7state = 0;
			}
			control7SEG(led7state, red_counter, red_counter);
			set7SEGTimer(250);
		}
		if(is_button_pressed(1) == BUTTON_IS_PRESSED){
			red_counter++;
		}
		break;
	case 1:
		if(getTimerFlag(1)){
			HAL_GPIO_TogglePin(GREEN_1_PORT, GREEN_1_PIN);
			HAL_GPIO_TogglePin(GREEN_2_PORT, GREEN_2_PIN);
			setLEDBlinkTimer(250);
		}
		if(getTimerFlag(0)){
			led7state++;
			if(led7state > 3){
				led7state = 0;
			}
			control7SEG(led7state, green_counter, green_counter);
			set7SEGTimer(250);
		}
		if(is_button_pressed(1) == BUTTON_IS_PRESSED){
			green_counter++;
		}
		break;
	default:
		break;
	}
	if(red_counter == 100) red_counter = 0;
	if(green_counter == 100) green_counter = 0;
}


